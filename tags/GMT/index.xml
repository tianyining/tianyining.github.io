<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GMT on Brave New World</title>
    <link>https://tianyining.github.io/tags/GMT/</link>
    <description>Recent content in GMT on Brave New World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 15 Jun 2022 15:22:33 +0800</lastBuildDate><atom:link href="https://tianyining.github.io/tags/GMT/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DSurfTomo_3DInitMOD_Workflow</title>
      <link>https://tianyining.github.io/post/DSurfTomo_Init3DMOD/</link>
      <pubDate>Wed, 15 Jun 2022 15:22:33 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/DSurfTomo_Init3DMOD/</guid>
      <description>说明 本篇 blog 用于记录在研究区域内，如何利用已有的初始速度模型（三维），通过插值等方式，生成 Whole Region 的反演初始速度模型。 本篇 blog 仅以 12km 深度切片为例进行</description>
    </item>
    
    <item>
      <title>Extract_1D_Mod</title>
      <link>https://tianyining.github.io/post/Extract_1D_Mod/</link>
      <pubDate>Wed, 25 May 2022 21:06:18 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/Extract_1D_Mod/</guid>
      <description>本篇 blog 记录如何从 3D 速度结构中抽取研究区域所包含的结构信息，计算研究区域 1D 平均速度结构，并绘制图像。 说明 本篇 blog 选择 Shen et al.,2016 的速度模型进行抽取，模</description>
    </item>
    
    <item>
      <title>GMT_misfit</title>
      <link>https://tianyining.github.io/post/GMT_misfit/</link>
      <pubDate>Wed, 11 May 2022 14:33:33 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/GMT_misfit/</guid>
      <description>说明 本篇 blog 用于记录如何使用 GMT 绘制反演结果之间的差异，包含数据格式整理，以及 GMT 绘图代码。 Sort Inversion Data depth &amp;amp; grid 对于反演结果，首先需要将最终的反演结果，整</description>
    </item>
    
    <item>
      <title>GMT_profile</title>
      <link>https://tianyining.github.io/post/GMT_profile/</link>
      <pubDate>Mon, 02 May 2022 11:34:41 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/GMT_profile/</guid>
      <description>说明 本篇 blog 用于记录如何使用 GMT 绘制一些剖面，本篇 blog 仅展示如何绘制海拔剖面、层析成像速度剖面，未完待续。 本次绘制剖面使用数据为 ZGL-2021_EPSL （速度模型未公开</description>
    </item>
    
    <item>
      <title>DSurfTomo_CheckboardTest</title>
      <link>https://tianyining.github.io/post/DSurfTomo_CheckboardTest/</link>
      <pubDate>Mon, 25 Apr 2022 15:58:11 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/DSurfTomo_CheckboardTest/</guid>
      <description>说明 本篇 blog 用于记录如何使用 DSurfTomo 进行检测板恢复测试，主要包含如何设计棋盘网格的速度异常尺寸，生成棋盘网格模型，以及 Synthetic Test 恢复性测试。本篇 blog 使用的测</description>
    </item>
    
    <item>
      <title>GMT_Slice_Version3</title>
      <link>https://tianyining.github.io/post/GMT_Slice_V3/</link>
      <pubDate>Thu, 24 Mar 2022 21:45:25 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/GMT_Slice_V3/</guid>
      <description>本篇 blog 尝试绘制 DAzimSurfTomo 反演出的方位各向异性横波速度切片； Update 相较于 Version2 的提升： 1 2 3 * 添加了不同深度的方位各向异性信息； * 对于方位各向异性深度切片，对</description>
    </item>
    
    <item>
      <title>GMT_Slice_Version2</title>
      <link>https://tianyining.github.io/post/GMT_Slice_V2/</link>
      <pubDate>Thu, 24 Mar 2022 21:12:34 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/GMT_Slice_V2/</guid>
      <description>本篇 blog 尝试绘制 DSurfTomo 反演出的剪切波速度深度切片； Update 相较于 Version1 的提升： 1 2 3 * 使用 subplot 同时绘制多个深度的速度结构； * 使用 gmt info 自动提取反演区域 -R 的绘制范</description>
    </item>
    
    <item>
      <title>GMT_Slice_Version1</title>
      <link>https://tianyining.github.io/post/GMT_Slice/</link>
      <pubDate>Wed, 12 Jan 2022 17:13:14 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/GMT_Slice/</guid>
      <description>本篇 blog 尝试绘制 DSurfTomo 反演出的 3D 横波速度结构的深度切片，这里仅以 4km 深度为例进行绘制； 说明 本篇 blog 所用数据来自东北，并非自己的研究区域，origin from</description>
    </item>
    
    <item>
      <title>Myanmar_Seismic_Stations_Maps_Version3</title>
      <link>https://tianyining.github.io/post/Myanmar_Seismic_Stations_Maps_Version3/</link>
      <pubDate>Sun, 02 Jan 2022 12:57:17 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/Myanmar_Seismic_Stations_Maps_Version3/</guid>
      <description>本篇 blog 记录使用 pygmt 绘制研究区域地震台站分布图。 1. 相较于 Version2 的提升 Version2 相较于 Version2 ，本篇 blog 添加板块俯冲边界、断层走滑方向等构造信息； 使用 topo.cpt 绘制底图； 添加</description>
    </item>
    
    <item>
      <title>某一台站与其余所有台站的背景噪声互相关函数叠加_Plot</title>
      <link>https://tianyining.github.io/post/COR_stack_M00/</link>
      <pubDate>Mon, 11 Oct 2021 18:06:47 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/COR_stack_M00/</guid>
      <description>说明 本篇 blog 展现在背景噪声互相关处理中，M00 台站与其余所有台站的背景噪声互相关函数示意图如何利用 python 进行绘制（参考 Three Station）。 Written by Shane Zhang</description>
    </item>
    
    <item>
      <title>两个接收台站在所有台站中的相对位置图_COR_stack_1</title>
      <link>https://tianyining.github.io/post/rec_station_map_ThreeStations/</link>
      <pubDate>Mon, 11 Oct 2021 17:55:38 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/rec_station_map_ThreeStations/</guid>
      <description>说明 本篇 blog 记录在背景噪声互相关处理中，两个接收台站与其他源台站之间的相对位置示意图（参考 Three Station 绘制）。 Written by Shane Zhang modified by Yining Tian 2021 代码及示意图 剔除两个接</description>
    </item>
    
    <item>
      <title>Myanmar Seismic Stations Maps_Version2</title>
      <link>https://tianyining.github.io/post/Seismic_Station_Plot_Myanmar/</link>
      <pubDate>Fri, 01 Oct 2021 15:24:18 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/Seismic_Station_Plot_Myanmar/</guid>
      <description>本篇 blog 记录使用 pygmt 绘制研究区域地震台站分布图。 1. 相较于 Version1 的提升 相较于 Version1 ，本篇 blog 实现利用 pandas 读入台站信息； fig.grdimage() 模块，利用键值对的方式，保存 grdimage 信息； 对</description>
    </item>
    
    <item>
      <title>Practice for fig.text()</title>
      <link>https://tianyining.github.io/post/Practice_fig.text/</link>
      <pubDate>Sun, 26 Sep 2021 20:41:53 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/Practice_fig.text/</guid>
      <description>本篇 blog 记录使用 pygmt 练习使用 fig.text() 命令。 注明：本篇 blog 并非原创，主要借鉴的是下面的 pygmt 示例，仅作为自我学习目的，侵权必删。 参考链接：https://ww</description>
    </item>
    
    <item>
      <title>Pygmt Seismic Station Plot_Practice1</title>
      <link>https://tianyining.github.io/post/Seismic_Station_Plot_Practice/</link>
      <pubDate>Sun, 26 Sep 2021 19:49:47 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/Seismic_Station_Plot_Practice/</guid>
      <description>本篇 blog 记录使用 pygmt 练习绘制地震台站分布图。 注明：本篇 blog 并非原创，主要借鉴的是下面的 github 示例，仅作为自我学习目的，侵权必删。 参考链接：https:</description>
    </item>
    
    <item>
      <title>Myanmar Seismic Stations Maps_Version1</title>
      <link>https://tianyining.github.io/post/pygmt_Seismic_Station_Maps/</link>
      <pubDate>Fri, 17 Sep 2021 16:33:10 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/pygmt_Seismic_Station_Maps/</guid>
      <description>本篇 blog 记录使用 pygmt 绘制研究区域地震台站分布图。 1. 数据准备 虚线分隔为不同 cell 块。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33</description>
    </item>
    
    <item>
      <title>Pygmt_安装&amp;Study_1</title>
      <link>https://tianyining.github.io/post/pygmt_learn1/</link>
      <pubDate>Mon, 23 Aug 2021 15:07:34 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/pygmt_learn1/</guid>
      <description>Pygmt 安装 参考官方教程即可； Plot the high resolution topography from the data source 参考链接：https://www.earthinversion.com/utilities/pyg</description>
    </item>
    
    <item>
      <title>Ubuntu系统下GMT4、GMT6版本共存</title>
      <link>https://tianyining.github.io/post/GMT4_GMT6/</link>
      <pubDate>Tue, 13 Apr 2021 11:50:46 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/GMT4_GMT6/</guid>
      <description>原本 Ubuntu18.04 只安装了 GMT6.1.1 ，但是由于绘图需要，许多现有GMT的脚本是GMT4写的，为不重复造轮子，GMT4和GMT6版本共存十分重要。 GMT6.1.1 安装 参照 seismology-101 也可</description>
    </item>
    
    <item>
      <title>Ubuntu GMT6.1.1 安装</title>
      <link>https://tianyining.github.io/post/GMT6.1.1/</link>
      <pubDate>Thu, 04 Feb 2021 20:13:02 +0800</pubDate>
      
      <guid>https://tianyining.github.io/post/GMT6.1.1/</guid>
      <description>​ 尽管大多数Linux发行版都提供了GMT二进制包，可以直接通过软件包管理器 apt 或 yum 安装，但发行版提供的GMT版本都很老，不建议使用。 ​ 本文介</description>
    </item>
    
  </channel>
</rss>
